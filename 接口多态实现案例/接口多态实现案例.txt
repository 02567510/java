接口多态实现案例

重点:接口的基本使用，对象的向上向下转型，使用接口作为方法的参数

案例分析
需要
1.接口interface:  USB接口
2.实现类implement:  USB设备（鼠标类、键盘类）
3.创建实现类对象main()
4.笔记本类
功能
USB接口：打开、关闭设备功能
笔记本类：开机、关机、使用USB设备功能
鼠标类：需要实现USB接口，具备点击功能
键盘类：需要实现USB接口，具备敲击功能

案例实现
<USB接口> 创建接口  interface
名称：USB
成员方法：(不知道具体实现用抽象方法  abstract 父类没有方法体，子类必须实现父类所有抽象方法，否则必须为抽象类)
打开设备（无返回值void） open()
关闭设备（无返回值void） close()

<鼠标类>接口的:实现类 implement
名称：Mouse
成员方法:
覆写父类的所有抽象方法 alt+enter
点击方法：void click()

<键盘类>接口的:实现类implement
名称:Keyboard
成员方法:
覆写父类的所有抽象方法 alt+enter
敲击方法：void type()

<笔记本类>   class
名称：computer
成员方法：
开机方法：powerOpen()
关机方法：powerOff()
使用USB设备方法
	参数：接口作为参数传入:
	返回值：void
	方法名：usbDevice(接口名 参数名)
		用接口参数调用接口方法打开设备
		判断设备类型，并用（对象的向下转型）调用设备特有方法
 			先判断：接口参数名 instanceof 实现类名
			后转型：实现类名 变量名=（实现类名）参数名
				变量名.特有方法名();
		关闭设备
Main方法：
1、创建笔记本电脑对象
	调用笔记本电脑对象调用开机方法
2、创建，实现类对象
A.多态写法（向上转型）： ------方法调用时，传递的是USB类型的鼠标或者键盘
B.不是多态写法：直接new一个实现类对象------方法调用时，传递的是实现类对象
C.使用子类对象，匿名对象
